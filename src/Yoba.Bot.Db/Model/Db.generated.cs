//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace Yoba.Bot.Db
{
	/// <summary>
	/// Database       : YobaDB
	/// Data Source    : YobaDB
	/// Server Version : 3.19.3
	/// </summary>
	public partial class YobaDb : LinqToDB.Data.DataConnection
	{
		public ITable<Attribute>        Attributes        { get { return this.GetTable<Attribute>(); } }
		public ITable<Note>             Notes             { get { return this.GetTable<Note>(); } }
		public ITable<Profile>          Profiles          { get { return this.GetTable<Profile>(); } }
		public ITable<ProfileAttribute> ProfileAttributes { get { return this.GetTable<ProfileAttribute>(); } }
		public ITable<ProfileJid>       ProfileJids       { get { return this.GetTable<ProfileJid>(); } }
		public ITable<ProfileName>      ProfileNames      { get { return this.GetTable<ProfileName>(); } }

		public YobaDb()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public YobaDb(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("Attribute")]
	public partial class Attribute
	{
		[Column("Attribute"),             NotNull] public string Attribute_Column { get; set; } // nvarchar(200)
		[Column(),            PrimaryKey, NotNull] public Guid   Id               { get; set; } // uniqueidentifier

		#region Associations

		/// <summary>
		/// FK_ProfileAttribute_1_0_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AttributeId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ProfileAttribute> ProfileAttributes { get; set; }

		#endregion
	}

	[Table("Note")]
	public partial class Note
	{
		[PrimaryKey, NotNull] public string   NoteName        { get; set; } // nvarchar(140)
		[Column,     NotNull] public string   Content         { get; set; } // ntext(max)
		[Column,     NotNull] public DateTime Added           { get; set; } // datetime
		[Column,     NotNull] public string   DisplayNoteName { get; set; } // nvarchar(200)
		[Column,     NotNull] public DateTime Updated         { get; set; } // datetime
	}

	[Table("Profile")]
	public partial class Profile
	{
		[PrimaryKey, NotNull] public Guid   Id          { get; set; } // uniqueidentifier
		[Column,     NotNull] public string MainName    { get; set; } // nvarchar(300)
		[Column,     NotNull] public int    Loisy       { get; set; } // int
		[Column,     NotNull] public int    Zashkvory   { get; set; } // int
		[Column,     NotNull] public int    Slivi       { get; set; } // int
		[Column,     NotNull] public bool   CanVote     { get; set; } // bit
		[Column,     NotNull] public bool   IsTransport { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_ProfileAttribute_0_0_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ProfileId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ProfileAttribute> ProfileAttributes { get; set; }

		/// <summary>
		/// FK_ProfileJid_0_0_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ProfileId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ProfileJid> ProfileJids { get; set; }

		/// <summary>
		/// FK_ProfileName_0_0_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ProfileId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ProfileName> ProfileNames { get; set; }

		#endregion
	}

	[Table("ProfileAttribute")]
	public partial class ProfileAttribute
	{
		[PrimaryKey(0), NotNull] public Guid   ProfileId   { get; set; } // uniqueidentifier
		[PrimaryKey(1), NotNull] public Guid   AttributeId { get; set; } // uniqueidentifier
		[Column,        NotNull] public string Value       { get; set; } // ntext(max)

		#region Associations

		/// <summary>
		/// FK_ProfileAttribute_1_0
		/// </summary>
		[Association(ThisKey="AttributeId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_ProfileAttribute_1_0", BackReferenceName="ProfileAttributes")]
		public Attribute Attribute { get; set; }

		/// <summary>
		/// FK_ProfileAttribute_0_0
		/// </summary>
		[Association(ThisKey="ProfileId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_ProfileAttribute_0_0", BackReferenceName="ProfileAttributes")]
		public Profile Profile { get; set; }

		#endregion
	}

	[Table("ProfileJid")]
	public partial class ProfileJid
	{
		[PrimaryKey(0), NotNull] public Guid   ProfileId { get; set; } // uniqueidentifier
		[PrimaryKey(1), NotNull] public string Jid       { get; set; } // nvarchar(300)

		#region Associations

		/// <summary>
		/// FK_ProfileJid_0_0
		/// </summary>
		[Association(ThisKey="ProfileId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_ProfileJid_0_0", BackReferenceName="ProfileJids")]
		public Profile Profile { get; set; }

		#endregion
	}

	[Table("ProfileName")]
	public partial class ProfileName
	{
		[PrimaryKey(0), NotNull] public Guid   ProfileId { get; set; } // uniqueidentifier
		[PrimaryKey(1), NotNull] public string Name      { get; set; } // nvarchar(300)

		#region Associations

		/// <summary>
		/// FK_ProfileName_0_0
		/// </summary>
		[Association(ThisKey="ProfileId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_ProfileName_0_0", BackReferenceName="ProfileNames")]
		public Profile Profile { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Attribute Find(this ITable<Attribute> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Note Find(this ITable<Note> table, string NoteName)
		{
			return table.FirstOrDefault(t =>
				t.NoteName == NoteName);
		}

		public static Profile Find(this ITable<Profile> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ProfileAttribute Find(this ITable<ProfileAttribute> table, Guid ProfileId, Guid AttributeId)
		{
			return table.FirstOrDefault(t =>
				t.ProfileId   == ProfileId &&
				t.AttributeId == AttributeId);
		}

		public static ProfileJid Find(this ITable<ProfileJid> table, Guid ProfileId, string Jid)
		{
			return table.FirstOrDefault(t =>
				t.ProfileId == ProfileId &&
				t.Jid       == Jid);
		}

		public static ProfileName Find(this ITable<ProfileName> table, Guid ProfileId, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ProfileId == ProfileId &&
				t.Name      == Name);
		}
	}
}

#pragma warning restore 1591
